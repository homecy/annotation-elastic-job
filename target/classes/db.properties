# 数据源
spring.datasource.druid.type = ${spring.datasource.druid.type}
spring.datasource.druid.url = ${spring.datasource.druid.url}
spring.datasource.druid.username = ${spring.datasource.druid.username}
spring.datasource.druid.password = ${spring.datasource.druid.password}
spring.datasource.druid.driver-class-name = ${spring.datasource.druid.driver-class-name}

# Master-Slave模式数据库驱动改为
#spring.datasource.druid.driver-class-name = com.mysql.jdbc.ReplicationDriver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize = ${spring.datasource.druid.initialSize}
spring.datasource.druid.minIdle = ${spring.datasource.druid.minIdle}
spring.datasource.druid.maxActive = ${spring.datasource.druid.maxActive}

# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait = ${spring.datasource.druid.maxWait}

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis = ${spring.datasource.druid.timeBetweenEvictionRunsMillis}

# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis = 300000
spring.datasource.druid.validationQuery = SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle = true
spring.datasource.druid.testOnBorrow = false
spring.datasource.druid.testOnReturn = false

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements = true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize = 20

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters = stat,wall,log4j

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat = true

# JPA Configuration:
spring.jpa.database = ${spring.jpa.database}

# Show or not log for each sql query
spring.jpa.show-sql = ${spring.jpa.show-sql}

# spring jpa for hibernate5
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect = ${spring.jpa.properties.hibernate.dialect}